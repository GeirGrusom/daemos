//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Repos\ParserGen\ParserGen\TransactQuery.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Transact.Query {

	using System.Linq.Expressions;
	using static System.Linq.Expressions.Expression;
	using System.Reflection;

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class TransactQueryLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, WS=7, QUOTED_STRING=8, 
		SINGLE_QUOTED_STRING=9, GUID_SLASH=10, GUID=11, INT=12, NULL=13, TRUE=14, 
		FALSE=15, AND=16, OR=17, XOR=18, ID=19, DATETIME=20, DATE=21, NOT_EQ=22, 
		EQ=23, GREATER=24, GREATER_OR_EQUAL=25, LESS=26, LESS_OR_EQUAL=27, NOT=28, 
		SUB=29, ADD=30, MUL=31, DIV=32, MOD=33;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "WS", "ESCAPED_QUOTE", 
		"QUOTED_STRING_BODY", "QUOTED_STRING", "ESCAPED_SINGLE_QUOTE", "SINGLE_QUOTED_STRING_BODY", 
		"SINGLE_QUOTED_STRING", "HEX_DIGIT", "HEX_DIGIT_2", "HEX_DIGIT_4", "HEX_DIGIT_8", 
		"GUID_SLASH", "GUID", "INT", "ID_HEAD", "ID_TAIL", "NULL", "TRUE", "FALSE", 
		"AND", "OR", "XOR", "ID", "FLOAT_INT", "YEAR", "MONTH", "DAY", "HOUR", 
		"MINUTE", "SECOND", "MILLISECOND", "DATE_FRAGMENT", "TIME_FRAGMENT", "DATETIME", 
		"DATE", "NOT_EQ", "EQ", "GREATER", "GREATER_OR_EQUAL", "LESS", "LESS_OR_EQUAL", 
		"NOT", "SUB", "ADD", "MUL", "DIV", "MOD"
	};


		public ParameterExpression Transaction { get; } = Parameter(typeof(Transaction));
	    public static MemberExpression GetPropertyCI(Expression owner, string name)
	    {
	        return Property(owner, owner.Type.GetProperty(name, System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.GetProperty | System.Reflection.BindingFlags.IgnoreCase | System.Reflection.BindingFlags.Public));
	    }


	public TransactQueryLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'.'", "'$'", "'e'", "'@'", "' '", null, null, null, 
		null, null, "'null'", "'true'", "'false'", "'and'", "'or'", "'xor'", null, 
		null, null, null, "'='", "'>'", "'>='", "'<'", "'<='", null, "'-'", "'+'", 
		"'*'", "'/'", "'%'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, "WS", "QUOTED_STRING", "SINGLE_QUOTED_STRING", 
		"GUID_SLASH", "GUID", "INT", "NULL", "TRUE", "FALSE", "AND", "OR", "XOR", 
		"ID", "DATETIME", "DATE", "NOT_EQ", "EQ", "GREATER", "GREATER_OR_EQUAL", 
		"LESS", "LESS_OR_EQUAL", "NOT", "SUB", "ADD", "MUL", "DIV", "MOD"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "TransactQuery.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2#\x13B\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x3\x2\x3\x2"+
		"\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3"+
		"\b\x3\b\x3\t\x3\t\x3\t\x3\n\x3\n\a\n\x83\n\n\f\n\xE\n\x86\v\n\x3\v\x3"+
		"\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r\a\r\x91\n\r\f\r\xE\r\x94\v\r\x3"+
		"\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3"+
		"\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3"+
		"\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3"+
		"\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x6\x15\xBC\n\x15\r\x15"+
		"\xE\x15\xBD\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3"+
		"\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3"+
		"\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\a\x1E\xE1\n\x1E\f\x1E\xE\x1E\xE4\v\x1E"+
		"\x3\x1F\x6\x1F\xE7\n\x1F\r\x1F\xE\x1F\xE8\x3 \x3 \x3 \x3 \x3 \x3!\x3!"+
		"\x3!\x3\"\x3\"\x3\"\x3#\x3#\x3#\x3$\x3$\x3$\x3%\x3%\x3%\x3&\x3&\x3&\x3"+
		"&\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x5(\x110\n"+
		"(\x3(\x3(\x3)\x3)\x3)\x3)\x3*\x3*\x3+\x3+\x3+\x3+\x5+\x11E\n+\x3,\x3,"+
		"\x3-\x3-\x3.\x3.\x3.\x3/\x3/\x3\x30\x3\x30\x3\x30\x3\x31\x3\x31\x3\x31"+
		"\x3\x31\x5\x31\x130\n\x31\x3\x32\x3\x32\x3\x33\x3\x33\x3\x34\x3\x34\x3"+
		"\x35\x3\x35\x3\x36\x3\x36\x4\x84\x92\x2\x2\x37\x3\x2\x3\x5\x2\x4\a\x2"+
		"\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\x2\x13\x2\x2\x15\x2\n\x17\x2"+
		"\x2\x19\x2\x2\x1B\x2\v\x1D\x2\x2\x1F\x2\x2!\x2\x2#\x2\x2%\x2\f\'\x2\r"+
		")\x2\xE+\x2\x2-\x2\x2/\x2\xF\x31\x2\x10\x33\x2\x11\x35\x2\x12\x37\x2\x13"+
		"\x39\x2\x14;\x2\x15=\x2\x2?\x2\x2\x41\x2\x2\x43\x2\x2\x45\x2\x2G\x2\x2"+
		"I\x2\x2K\x2\x2M\x2\x2O\x2\x2Q\x2\x16S\x2\x17U\x2\x18W\x2\x19Y\x2\x1A["+
		"\x2\x1B]\x2\x1C_\x2\x1D\x61\x2\x1E\x63\x2\x1F\x65\x2 g\x2!i\x2\"k\x2#"+
		"\x3\x2\v\x4\x2\f\f\xF\xF\x5\x2\x32;\x43H\x63h\x3\x2\x32;\x5\x2\x43\\\x61"+
		"\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x3\x2\x32\x33\x3\x2\x32\x35\x3"+
		"\x2\x32\x34\x3\x2\x32\x37\x130\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2"+
		"\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33"+
		"\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2"+
		"\x2;\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3"+
		"\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2"+
		"\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2\x2\x2\x2g\x3\x2"+
		"\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x3m\x3\x2\x2\x2\x5o\x3\x2\x2\x2"+
		"\aq\x3\x2\x2\x2\ts\x3\x2\x2\x2\vu\x3\x2\x2\x2\rw\x3\x2\x2\x2\xFy\x3\x2"+
		"\x2\x2\x11}\x3\x2\x2\x2\x13\x84\x3\x2\x2\x2\x15\x87\x3\x2\x2\x2\x17\x8B"+
		"\x3\x2\x2\x2\x19\x92\x3\x2\x2\x2\x1B\x95\x3\x2\x2\x2\x1D\x99\x3\x2\x2"+
		"\x2\x1F\x9B\x3\x2\x2\x2!\x9E\x3\x2\x2\x2#\xA1\x3\x2\x2\x2%\xA4\x3\x2\x2"+
		"\x2\'\xB1\x3\x2\x2\x2)\xBB\x3\x2\x2\x2+\xBF\x3\x2\x2\x2-\xC1\x3\x2\x2"+
		"\x2/\xC3\x3\x2\x2\x2\x31\xC8\x3\x2\x2\x2\x33\xCD\x3\x2\x2\x2\x35\xD3\x3"+
		"\x2\x2\x2\x37\xD7\x3\x2\x2\x2\x39\xDA\x3\x2\x2\x2;\xDE\x3\x2\x2\x2=\xE6"+
		"\x3\x2\x2\x2?\xEA\x3\x2\x2\x2\x41\xEF\x3\x2\x2\x2\x43\xF2\x3\x2\x2\x2"+
		"\x45\xF5\x3\x2\x2\x2G\xF8\x3\x2\x2\x2I\xFB\x3\x2\x2\x2K\xFE\x3\x2\x2\x2"+
		"M\x102\x3\x2\x2\x2O\x108\x3\x2\x2\x2Q\x113\x3\x2\x2\x2S\x117\x3\x2\x2"+
		"\x2U\x11D\x3\x2\x2\x2W\x11F\x3\x2\x2\x2Y\x121\x3\x2\x2\x2[\x123\x3\x2"+
		"\x2\x2]\x126\x3\x2\x2\x2_\x128\x3\x2\x2\x2\x61\x12F\x3\x2\x2\x2\x63\x131"+
		"\x3\x2\x2\x2\x65\x133\x3\x2\x2\x2g\x135\x3\x2\x2\x2i\x137\x3\x2\x2\x2"+
		"k\x139\x3\x2\x2\x2mn\a*\x2\x2n\x4\x3\x2\x2\x2op\a+\x2\x2p\x6\x3\x2\x2"+
		"\x2qr\a\x30\x2\x2r\b\x3\x2\x2\x2st\a&\x2\x2t\n\x3\x2\x2\x2uv\ag\x2\x2"+
		"v\f\x3\x2\x2\x2wx\a\x42\x2\x2x\xE\x3\x2\x2\x2yz\a\"\x2\x2z{\x3\x2\x2\x2"+
		"{|\b\b\x2\x2|\x10\x3\x2\x2\x2}~\a^\x2\x2~\x7F\a$\x2\x2\x7F\x12\x3\x2\x2"+
		"\x2\x80\x83\x5\x11\t\x2\x81\x83\n\x2\x2\x2\x82\x80\x3\x2\x2\x2\x82\x81"+
		"\x3\x2\x2\x2\x83\x86\x3\x2\x2\x2\x84\x85\x3\x2\x2\x2\x84\x82\x3\x2\x2"+
		"\x2\x85\x14\x3\x2\x2\x2\x86\x84\x3\x2\x2\x2\x87\x88\a$\x2\x2\x88\x89\x5"+
		"\x13\n\x2\x89\x8A\a$\x2\x2\x8A\x16\x3\x2\x2\x2\x8B\x8C\a^\x2\x2\x8C\x8D"+
		"\a)\x2\x2\x8D\x18\x3\x2\x2\x2\x8E\x91\x5\x17\f\x2\x8F\x91\n\x2\x2\x2\x90"+
		"\x8E\x3\x2\x2\x2\x90\x8F\x3\x2\x2\x2\x91\x94\x3\x2\x2\x2\x92\x93\x3\x2"+
		"\x2\x2\x92\x90\x3\x2\x2\x2\x93\x1A\x3\x2\x2\x2\x94\x92\x3\x2\x2\x2\x95"+
		"\x96\a)\x2\x2\x96\x97\x5\x19\r\x2\x97\x98\a)\x2\x2\x98\x1C\x3\x2\x2\x2"+
		"\x99\x9A\t\x3\x2\x2\x9A\x1E\x3\x2\x2\x2\x9B\x9C\x5\x1D\xF\x2\x9C\x9D\x5"+
		"\x1D\xF\x2\x9D \x3\x2\x2\x2\x9E\x9F\x5\x1F\x10\x2\x9F\xA0\x5\x1F\x10\x2"+
		"\xA0\"\x3\x2\x2\x2\xA1\xA2\x5!\x11\x2\xA2\xA3\x5!\x11\x2\xA3$\x3\x2\x2"+
		"\x2\xA4\xA5\a}\x2\x2\xA5\xA6\x5#\x12\x2\xA6\xA7\a/\x2\x2\xA7\xA8\x5!\x11"+
		"\x2\xA8\xA9\a/\x2\x2\xA9\xAA\x5!\x11\x2\xAA\xAB\a/\x2\x2\xAB\xAC\x5!\x11"+
		"\x2\xAC\xAD\a/\x2\x2\xAD\xAE\x5#\x12\x2\xAE\xAF\x5!\x11\x2\xAF\xB0\a\x7F"+
		"\x2\x2\xB0&\x3\x2\x2\x2\xB1\xB2\a}\x2\x2\xB2\xB3\x5#\x12\x2\xB3\xB4\x5"+
		"!\x11\x2\xB4\xB5\x5!\x11\x2\xB5\xB6\x5!\x11\x2\xB6\xB7\x5#\x12\x2\xB7"+
		"\xB8\x5!\x11\x2\xB8\xB9\a\x7F\x2\x2\xB9(\x3\x2\x2\x2\xBA\xBC\t\x4\x2\x2"+
		"\xBB\xBA\x3\x2\x2\x2\xBC\xBD\x3\x2\x2\x2\xBD\xBB\x3\x2\x2\x2\xBD\xBE\x3"+
		"\x2\x2\x2\xBE*\x3\x2\x2\x2\xBF\xC0\t\x5\x2\x2\xC0,\x3\x2\x2\x2\xC1\xC2"+
		"\t\x6\x2\x2\xC2.\x3\x2\x2\x2\xC3\xC4\ap\x2\x2\xC4\xC5\aw\x2\x2\xC5\xC6"+
		"\an\x2\x2\xC6\xC7\an\x2\x2\xC7\x30\x3\x2\x2\x2\xC8\xC9\av\x2\x2\xC9\xCA"+
		"\at\x2\x2\xCA\xCB\aw\x2\x2\xCB\xCC\ag\x2\x2\xCC\x32\x3\x2\x2\x2\xCD\xCE"+
		"\ah\x2\x2\xCE\xCF\a\x63\x2\x2\xCF\xD0\an\x2\x2\xD0\xD1\au\x2\x2\xD1\xD2"+
		"\ag\x2\x2\xD2\x34\x3\x2\x2\x2\xD3\xD4\a\x63\x2\x2\xD4\xD5\ap\x2\x2\xD5"+
		"\xD6\a\x66\x2\x2\xD6\x36\x3\x2\x2\x2\xD7\xD8\aq\x2\x2\xD8\xD9\at\x2\x2"+
		"\xD9\x38\x3\x2\x2\x2\xDA\xDB\az\x2\x2\xDB\xDC\aq\x2\x2\xDC\xDD\at\x2\x2"+
		"\xDD:\x3\x2\x2\x2\xDE\xE2\x5+\x16\x2\xDF\xE1\x5-\x17\x2\xE0\xDF\x3\x2"+
		"\x2\x2\xE1\xE4\x3\x2\x2\x2\xE2\xE0\x3\x2\x2\x2\xE2\xE3\x3\x2\x2\x2\xE3"+
		"<\x3\x2\x2\x2\xE4\xE2\x3\x2\x2\x2\xE5\xE7\t\x4\x2\x2\xE6\xE5\x3\x2\x2"+
		"\x2\xE7\xE8\x3\x2\x2\x2\xE8\xE6\x3\x2\x2\x2\xE8\xE9\x3\x2\x2\x2\xE9>\x3"+
		"\x2\x2\x2\xEA\xEB\t\x4\x2\x2\xEB\xEC\t\x4\x2\x2\xEC\xED\t\x4\x2\x2\xED"+
		"\xEE\t\x4\x2\x2\xEE@\x3\x2\x2\x2\xEF\xF0\t\a\x2\x2\xF0\xF1\t\x4\x2\x2"+
		"\xF1\x42\x3\x2\x2\x2\xF2\xF3\t\b\x2\x2\xF3\xF4\t\x4\x2\x2\xF4\x44\x3\x2"+
		"\x2\x2\xF5\xF6\t\t\x2\x2\xF6\xF7\t\x4\x2\x2\xF7\x46\x3\x2\x2\x2\xF8\xF9"+
		"\t\n\x2\x2\xF9\xFA\t\x4\x2\x2\xFAH\x3\x2\x2\x2\xFB\xFC\t\n\x2\x2\xFC\xFD"+
		"\t\x4\x2\x2\xFDJ\x3\x2\x2\x2\xFE\xFF\t\x4\x2\x2\xFF\x100\t\x4\x2\x2\x100"+
		"\x101\t\x4\x2\x2\x101L\x3\x2\x2\x2\x102\x103\x5? \x2\x103\x104\a/\x2\x2"+
		"\x104\x105\x5\x41!\x2\x105\x106\a/\x2\x2\x106\x107\x5\x43\"\x2\x107N\x3"+
		"\x2\x2\x2\x108\x109\x5\x45#\x2\x109\x10A\a<\x2\x2\x10A\x10B\x5G$\x2\x10B"+
		"\x10C\a<\x2\x2\x10C\x10F\x5I%\x2\x10D\x10E\a\x30\x2\x2\x10E\x110\x5K&"+
		"\x2\x10F\x10D\x3\x2\x2\x2\x10F\x110\x3\x2\x2\x2\x110\x111\x3\x2\x2\x2"+
		"\x111\x112\a\\\x2\x2\x112P\x3\x2\x2\x2\x113\x114\x5M\'\x2\x114\x115\a"+
		"V\x2\x2\x115\x116\x5O(\x2\x116R\x3\x2\x2\x2\x117\x118\x5M\'\x2\x118T\x3"+
		"\x2\x2\x2\x119\x11A\a?\x2\x2\x11A\x11E\a?\x2\x2\x11B\x11C\a>\x2\x2\x11C"+
		"\x11E\a@\x2\x2\x11D\x119\x3\x2\x2\x2\x11D\x11B\x3\x2\x2\x2\x11EV\x3\x2"+
		"\x2\x2\x11F\x120\a?\x2\x2\x120X\x3\x2\x2\x2\x121\x122\a@\x2\x2\x122Z\x3"+
		"\x2\x2\x2\x123\x124\a@\x2\x2\x124\x125\a?\x2\x2\x125\\\x3\x2\x2\x2\x126"+
		"\x127\a>\x2\x2\x127^\x3\x2\x2\x2\x128\x129\a>\x2\x2\x129\x12A\a?\x2\x2"+
		"\x12A`\x3\x2\x2\x2\x12B\x130\a#\x2\x2\x12C\x12D\ap\x2\x2\x12D\x12E\aq"+
		"\x2\x2\x12E\x130\av\x2\x2\x12F\x12B\x3\x2\x2\x2\x12F\x12C\x3\x2\x2\x2"+
		"\x130\x62\x3\x2\x2\x2\x131\x132\a/\x2\x2\x132\x64\x3\x2\x2\x2\x133\x134"+
		"\a-\x2\x2\x134\x66\x3\x2\x2\x2\x135\x136\a,\x2\x2\x136h\x3\x2\x2\x2\x137"+
		"\x138\a\x31\x2\x2\x138j\x3\x2\x2\x2\x139\x13A\a\'\x2\x2\x13Al\x3\x2\x2"+
		"\x2\r\x2\x82\x84\x90\x92\xBD\xE2\xE8\x10F\x11D\x12F\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Transact.Query
