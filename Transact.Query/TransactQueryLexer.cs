//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Repos\ParserGen\ParserGen\TransactQuery.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Transact.Query {

	using System.Linq.Expressions;
	using System.Linq;
	using static System.Linq.Expressions.Expression;
	using System.Reflection;

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class TransactQueryLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		WS=10, QUOTED_STRING=11, SINGLE_QUOTED_STRING=12, GUID_SLASH=13, GUID=14, 
		INT=15, NULL=16, TRUE=17, FALSE=18, AND=19, OR=20, XOR=21, IN=22, INITIALIZED=23, 
		AUTHORIZED=24, COMPLETED=25, CANCELLED=26, FAILED=27, DATETIME=28, DATE=29, 
		NOT_EQ=30, EQ=31, GREATER=32, GREATER_OR_EQUAL=33, LESS=34, LESS_OR_EQUAL=35, 
		NOT=36, SUB=37, ADD=38, ID=39, MUL=40, DIV=41, MOD=42;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"WS", "ESCAPED_QUOTE", "QUOTED_STRING_BODY", "QUOTED_STRING", "ESCAPED_SINGLE_QUOTE", 
		"SINGLE_QUOTED_STRING_BODY", "SINGLE_QUOTED_STRING", "HEX_DIGIT", "HEX_DIGIT_2", 
		"HEX_DIGIT_4", "HEX_DIGIT_8", "GUID_SLASH", "GUID", "INT", "ID_HEAD", 
		"ID_TAIL", "NULL", "TRUE", "FALSE", "AND", "OR", "XOR", "IN", "INITIALIZED", 
		"AUTHORIZED", "COMPLETED", "CANCELLED", "FAILED", "YEAR", "MONTH", "DAY", 
		"HOUR", "MINUTE", "SECOND", "MILLISECOND", "DATE_FRAGMENT", "TIME_FRAGMENT", 
		"DATETIME", "DATE", "NOT_EQ", "EQ", "GREATER", "GREATER_OR_EQUAL", "LESS", 
		"LESS_OR_EQUAL", "NOT", "SUB", "ADD", "ID", "MUL", "DIV", "MOD"
	};


		public ParameterExpression Transaction { get; } = Parameter(typeof(Transaction));
	    public static MemberExpression GetPropertyCI(Expression owner, string name)
	    {
	        return Property(owner, owner.Type.GetProperty(name, System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.GetProperty | System.Reflection.BindingFlags.IgnoreCase | System.Reflection.BindingFlags.Public));
	    }

		private static Expression In(Expression lhs, Expression rhs)
		{
			var method = rhs.Type.GetMethod("Contains", new [] { lhs.Type });

			return Call(rhs, method, lhs);
		}


	public TransactQueryLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'.'", "'$'", "'e'", "'@'", "'['", "','", "']'", "' '", 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "'='", "'>'", "'>='", 
		"'<'", "'<='", null, "'-'", "'+'", null, "'*'", "'/'", "'%'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, "WS", "QUOTED_STRING", 
		"SINGLE_QUOTED_STRING", "GUID_SLASH", "GUID", "INT", "NULL", "TRUE", "FALSE", 
		"AND", "OR", "XOR", "IN", "INITIALIZED", "AUTHORIZED", "COMPLETED", "CANCELLED", 
		"FAILED", "DATETIME", "DATE", "NOT_EQ", "EQ", "GREATER", "GREATER_OR_EQUAL", 
		"LESS", "LESS_OR_EQUAL", "NOT", "SUB", "ADD", "ID", "MUL", "DIV", "MOD"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "TransactQuery.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2,\x181\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37"+
		"\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x4<\t<\x4=\t=\x4>\t>\x3\x2\x3"+
		"\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3"+
		"\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r\a"+
		"\r\x99\n\r\f\r\xE\r\x9C\v\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF"+
		"\x3\x10\x3\x10\a\x10\xA7\n\x10\f\x10\xE\x10\xAA\v\x10\x3\x11\x3\x11\x3"+
		"\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3"+
		"\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3"+
		"\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3"+
		"\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x6\x18\xD2\n\x18\r\x18\xE\x18"+
		"\xD3\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3"+
		"\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3"+
		"\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 "+
		"\x3!\x3!\x3!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3"+
		"\"\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3"+
		"$\x3$\x3$\x3$\x3$\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3&\x3&\x3&"+
		"\x3&\x3&\x3&\x3&\x3\'\x3\'\x3\'\x3\'\x3\'\x3(\x3(\x3(\x3)\x3)\x3)\x3*"+
		"\x3*\x3*\x3+\x3+\x3+\x3,\x3,\x3,\x3-\x3-\x3-\x3-\x3.\x3.\x3.\x3.\x3.\x3"+
		".\x3/\x3/\x3/\x3/\x3/\x3/\x3/\x5/\x14F\n/\x3/\x3/\x3\x30\x3\x30\x3\x30"+
		"\x3\x30\x3\x31\x3\x31\x3\x32\x3\x32\x3\x32\x3\x32\x5\x32\x15D\n\x32\x3"+
		"\x33\x3\x33\x3\x34\x3\x34\x3\x35\x3\x35\x3\x35\x3\x36\x3\x36\x3\x37\x3"+
		"\x37\x3\x37\x3\x38\x3\x38\x3\x38\x3\x38\x5\x38\x16F\n\x38\x3\x39\x3\x39"+
		"\x3:\x3:\x3;\x3;\a;\x177\n;\f;\xE;\x17A\v;\x3<\x3<\x3=\x3=\x3>\x3>\x4"+
		"\x9A\xA8\x2\x2?\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\x2\x19\x2\x2\x1B\x2\r\x1D\x2\x2\x1F"+
		"\x2\x2!\x2\xE#\x2\x2%\x2\x2\'\x2\x2)\x2\x2+\x2\xF-\x2\x10/\x2\x11\x31"+
		"\x2\x2\x33\x2\x2\x35\x2\x12\x37\x2\x13\x39\x2\x14;\x2\x15=\x2\x16?\x2"+
		"\x17\x41\x2\x18\x43\x2\x19\x45\x2\x1AG\x2\x1BI\x2\x1CK\x2\x1DM\x2\x2O"+
		"\x2\x2Q\x2\x2S\x2\x2U\x2\x2W\x2\x2Y\x2\x2[\x2\x2]\x2\x2_\x2\x1E\x61\x2"+
		"\x1F\x63\x2 \x65\x2!g\x2\"i\x2#k\x2$m\x2%o\x2&q\x2\'s\x2(u\x2)w\x2*y\x2"+
		"+{\x2,\x3\x2\x1D\x4\x2\f\f\xF\xF\x5\x2\x32;\x43H\x63h\x3\x2\x32;\x5\x2"+
		"\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x4\x2PPpp\x4\x2WWww"+
		"\x4\x2NNnn\x4\x2VVvv\x4\x2TTtt\x4\x2GGgg\x4\x2HHhh\x4\x2\x43\x43\x63\x63"+
		"\x4\x2UUuu\x4\x2\x46\x46\x66\x66\x4\x2QQqq\x4\x2ZZzz\x4\x2KKkk\x4\x2\\"+
		"\\||\x4\x2JJjj\x4\x2\x45\x45\x65\x65\x4\x2OOoo\x4\x2RRrr\x3\x2\x32\x33"+
		"\x3\x2\x32\x35\x3\x2\x32\x34\x3\x2\x32\x37\x176\x2\x3\x3\x2\x2\x2\x2\x5"+
		"\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3"+
		"\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3"+
		"\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39"+
		"\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3"+
		"\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3"+
		"\x2\x2\x2\x2K\x3\x2\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3"+
		"\x2\x2\x2\x2\x65\x3\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2"+
		"\x2\x2\x2m\x3\x2\x2\x2\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x2s\x3\x2\x2\x2"+
		"\x2u\x3\x2\x2\x2\x2w\x3\x2\x2\x2\x2y\x3\x2\x2\x2\x2{\x3\x2\x2\x2\x3}\x3"+
		"\x2\x2\x2\x5\x7F\x3\x2\x2\x2\a\x81\x3\x2\x2\x2\t\x83\x3\x2\x2\x2\v\x85"+
		"\x3\x2\x2\x2\r\x87\x3\x2\x2\x2\xF\x89\x3\x2\x2\x2\x11\x8B\x3\x2\x2\x2"+
		"\x13\x8D\x3\x2\x2\x2\x15\x8F\x3\x2\x2\x2\x17\x93\x3\x2\x2\x2\x19\x9A\x3"+
		"\x2\x2\x2\x1B\x9D\x3\x2\x2\x2\x1D\xA1\x3\x2\x2\x2\x1F\xA8\x3\x2\x2\x2"+
		"!\xAB\x3\x2\x2\x2#\xAF\x3\x2\x2\x2%\xB1\x3\x2\x2\x2\'\xB4\x3\x2\x2\x2"+
		")\xB7\x3\x2\x2\x2+\xBA\x3\x2\x2\x2-\xC7\x3\x2\x2\x2/\xD1\x3\x2\x2\x2\x31"+
		"\xD5\x3\x2\x2\x2\x33\xD7\x3\x2\x2\x2\x35\xD9\x3\x2\x2\x2\x37\xDE\x3\x2"+
		"\x2\x2\x39\xE3\x3\x2\x2\x2;\xE9\x3\x2\x2\x2=\xED\x3\x2\x2\x2?\xF0\x3\x2"+
		"\x2\x2\x41\xF4\x3\x2\x2\x2\x43\xF7\x3\x2\x2\x2\x45\x103\x3\x2\x2\x2G\x10E"+
		"\x3\x2\x2\x2I\x118\x3\x2\x2\x2K\x122\x3\x2\x2\x2M\x129\x3\x2\x2\x2O\x12E"+
		"\x3\x2\x2\x2Q\x131\x3\x2\x2\x2S\x134\x3\x2\x2\x2U\x137\x3\x2\x2\x2W\x13A"+
		"\x3\x2\x2\x2Y\x13D\x3\x2\x2\x2[\x141\x3\x2\x2\x2]\x147\x3\x2\x2\x2_\x152"+
		"\x3\x2\x2\x2\x61\x156\x3\x2\x2\x2\x63\x15C\x3\x2\x2\x2\x65\x15E\x3\x2"+
		"\x2\x2g\x160\x3\x2\x2\x2i\x162\x3\x2\x2\x2k\x165\x3\x2\x2\x2m\x167\x3"+
		"\x2\x2\x2o\x16E\x3\x2\x2\x2q\x170\x3\x2\x2\x2s\x172\x3\x2\x2\x2u\x174"+
		"\x3\x2\x2\x2w\x17B\x3\x2\x2\x2y\x17D\x3\x2\x2\x2{\x17F\x3\x2\x2\x2}~\a"+
		"*\x2\x2~\x4\x3\x2\x2\x2\x7F\x80\a+\x2\x2\x80\x6\x3\x2\x2\x2\x81\x82\a"+
		"\x30\x2\x2\x82\b\x3\x2\x2\x2\x83\x84\a&\x2\x2\x84\n\x3\x2\x2\x2\x85\x86"+
		"\ag\x2\x2\x86\f\x3\x2\x2\x2\x87\x88\a\x42\x2\x2\x88\xE\x3\x2\x2\x2\x89"+
		"\x8A\a]\x2\x2\x8A\x10\x3\x2\x2\x2\x8B\x8C\a.\x2\x2\x8C\x12\x3\x2\x2\x2"+
		"\x8D\x8E\a_\x2\x2\x8E\x14\x3\x2\x2\x2\x8F\x90\a\"\x2\x2\x90\x91\x3\x2"+
		"\x2\x2\x91\x92\b\v\x2\x2\x92\x16\x3\x2\x2\x2\x93\x94\a^\x2\x2\x94\x95"+
		"\a$\x2\x2\x95\x18\x3\x2\x2\x2\x96\x99\x5\x17\f\x2\x97\x99\n\x2\x2\x2\x98"+
		"\x96\x3\x2\x2\x2\x98\x97\x3\x2\x2\x2\x99\x9C\x3\x2\x2\x2\x9A\x9B\x3\x2"+
		"\x2\x2\x9A\x98\x3\x2\x2\x2\x9B\x1A\x3\x2\x2\x2\x9C\x9A\x3\x2\x2\x2\x9D"+
		"\x9E\a$\x2\x2\x9E\x9F\x5\x19\r\x2\x9F\xA0\a$\x2\x2\xA0\x1C\x3\x2\x2\x2"+
		"\xA1\xA2\a^\x2\x2\xA2\xA3\a)\x2\x2\xA3\x1E\x3\x2\x2\x2\xA4\xA7\x5\x1D"+
		"\xF\x2\xA5\xA7\n\x2\x2\x2\xA6\xA4\x3\x2\x2\x2\xA6\xA5\x3\x2\x2\x2\xA7"+
		"\xAA\x3\x2\x2\x2\xA8\xA9\x3\x2\x2\x2\xA8\xA6\x3\x2\x2\x2\xA9 \x3\x2\x2"+
		"\x2\xAA\xA8\x3\x2\x2\x2\xAB\xAC\a)\x2\x2\xAC\xAD\x5\x1F\x10\x2\xAD\xAE"+
		"\a)\x2\x2\xAE\"\x3\x2\x2\x2\xAF\xB0\t\x3\x2\x2\xB0$\x3\x2\x2\x2\xB1\xB2"+
		"\x5#\x12\x2\xB2\xB3\x5#\x12\x2\xB3&\x3\x2\x2\x2\xB4\xB5\x5%\x13\x2\xB5"+
		"\xB6\x5%\x13\x2\xB6(\x3\x2\x2\x2\xB7\xB8\x5\'\x14\x2\xB8\xB9\x5\'\x14"+
		"\x2\xB9*\x3\x2\x2\x2\xBA\xBB\a}\x2\x2\xBB\xBC\x5)\x15\x2\xBC\xBD\a/\x2"+
		"\x2\xBD\xBE\x5\'\x14\x2\xBE\xBF\a/\x2\x2\xBF\xC0\x5\'\x14\x2\xC0\xC1\a"+
		"/\x2\x2\xC1\xC2\x5\'\x14\x2\xC2\xC3\a/\x2\x2\xC3\xC4\x5)\x15\x2\xC4\xC5"+
		"\x5\'\x14\x2\xC5\xC6\a\x7F\x2\x2\xC6,\x3\x2\x2\x2\xC7\xC8\a}\x2\x2\xC8"+
		"\xC9\x5)\x15\x2\xC9\xCA\x5\'\x14\x2\xCA\xCB\x5\'\x14\x2\xCB\xCC\x5\'\x14"+
		"\x2\xCC\xCD\x5)\x15\x2\xCD\xCE\x5\'\x14\x2\xCE\xCF\a\x7F\x2\x2\xCF.\x3"+
		"\x2\x2\x2\xD0\xD2\t\x4\x2\x2\xD1\xD0\x3\x2\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3"+
		"\xD1\x3\x2\x2\x2\xD3\xD4\x3\x2\x2\x2\xD4\x30\x3\x2\x2\x2\xD5\xD6\t\x5"+
		"\x2\x2\xD6\x32\x3\x2\x2\x2\xD7\xD8\t\x6\x2\x2\xD8\x34\x3\x2\x2\x2\xD9"+
		"\xDA\t\a\x2\x2\xDA\xDB\t\b\x2\x2\xDB\xDC\t\t\x2\x2\xDC\xDD\t\t\x2\x2\xDD"+
		"\x36\x3\x2\x2\x2\xDE\xDF\t\n\x2\x2\xDF\xE0\t\v\x2\x2\xE0\xE1\t\b\x2\x2"+
		"\xE1\xE2\t\f\x2\x2\xE2\x38\x3\x2\x2\x2\xE3\xE4\t\r\x2\x2\xE4\xE5\t\xE"+
		"\x2\x2\xE5\xE6\t\t\x2\x2\xE6\xE7\t\xF\x2\x2\xE7\xE8\t\f\x2\x2\xE8:\x3"+
		"\x2\x2\x2\xE9\xEA\t\xE\x2\x2\xEA\xEB\t\a\x2\x2\xEB\xEC\t\x10\x2\x2\xEC"+
		"<\x3\x2\x2\x2\xED\xEE\t\x11\x2\x2\xEE\xEF\t\v\x2\x2\xEF>\x3\x2\x2\x2\xF0"+
		"\xF1\t\x12\x2\x2\xF1\xF2\t\x11\x2\x2\xF2\xF3\t\v\x2\x2\xF3@\x3\x2\x2\x2"+
		"\xF4\xF5\t\x13\x2\x2\xF5\xF6\t\a\x2\x2\xF6\x42\x3\x2\x2\x2\xF7\xF8\t\x13"+
		"\x2\x2\xF8\xF9\t\a\x2\x2\xF9\xFA\t\x13\x2\x2\xFA\xFB\t\n\x2\x2\xFB\xFC"+
		"\t\x13\x2\x2\xFC\xFD\t\xE\x2\x2\xFD\xFE\t\t\x2\x2\xFE\xFF\t\x13\x2\x2"+
		"\xFF\x100\t\x14\x2\x2\x100\x101\t\f\x2\x2\x101\x102\t\x10\x2\x2\x102\x44"+
		"\x3\x2\x2\x2\x103\x104\t\xE\x2\x2\x104\x105\t\b\x2\x2\x105\x106\t\n\x2"+
		"\x2\x106\x107\t\x15\x2\x2\x107\x108\t\x11\x2\x2\x108\x109\t\v\x2\x2\x109"+
		"\x10A\t\x13\x2\x2\x10A\x10B\t\x14\x2\x2\x10B\x10C\t\f\x2\x2\x10C\x10D"+
		"\t\x10\x2\x2\x10D\x46\x3\x2\x2\x2\x10E\x10F\t\x16\x2\x2\x10F\x110\t\x11"+
		"\x2\x2\x110\x111\t\x17\x2\x2\x111\x112\t\x18\x2\x2\x112\x113\t\t\x2\x2"+
		"\x113\x114\t\f\x2\x2\x114\x115\t\n\x2\x2\x115\x116\t\f\x2\x2\x116\x117"+
		"\t\x10\x2\x2\x117H\x3\x2\x2\x2\x118\x119\t\x16\x2\x2\x119\x11A\t\xE\x2"+
		"\x2\x11A\x11B\t\a\x2\x2\x11B\x11C\t\x16\x2\x2\x11C\x11D\t\f\x2\x2\x11D"+
		"\x11E\t\t\x2\x2\x11E\x11F\t\t\x2\x2\x11F\x120\t\f\x2\x2\x120\x121\t\x10"+
		"\x2\x2\x121J\x3\x2\x2\x2\x122\x123\t\r\x2\x2\x123\x124\t\xE\x2\x2\x124"+
		"\x125\t\x13\x2\x2\x125\x126\t\t\x2\x2\x126\x127\t\f\x2\x2\x127\x128\t"+
		"\x10\x2\x2\x128L\x3\x2\x2\x2\x129\x12A\t\x4\x2\x2\x12A\x12B\t\x4\x2\x2"+
		"\x12B\x12C\t\x4\x2\x2\x12C\x12D\t\x4\x2\x2\x12DN\x3\x2\x2\x2\x12E\x12F"+
		"\t\x19\x2\x2\x12F\x130\t\x4\x2\x2\x130P\x3\x2\x2\x2\x131\x132\t\x1A\x2"+
		"\x2\x132\x133\t\x4\x2\x2\x133R\x3\x2\x2\x2\x134\x135\t\x1B\x2\x2\x135"+
		"\x136\t\x4\x2\x2\x136T\x3\x2\x2\x2\x137\x138\t\x1C\x2\x2\x138\x139\t\x4"+
		"\x2\x2\x139V\x3\x2\x2\x2\x13A\x13B\t\x1C\x2\x2\x13B\x13C\t\x4\x2\x2\x13C"+
		"X\x3\x2\x2\x2\x13D\x13E\t\x4\x2\x2\x13E\x13F\t\x4\x2\x2\x13F\x140\t\x4"+
		"\x2\x2\x140Z\x3\x2\x2\x2\x141\x142\x5M\'\x2\x142\x143\a/\x2\x2\x143\x144"+
		"\x5O(\x2\x144\x145\a/\x2\x2\x145\x146\x5Q)\x2\x146\\\x3\x2\x2\x2\x147"+
		"\x148\x5S*\x2\x148\x149\a<\x2\x2\x149\x14A\x5U+\x2\x14A\x14B\a<\x2\x2"+
		"\x14B\x14E\x5W,\x2\x14C\x14D\a\x30\x2\x2\x14D\x14F\x5Y-\x2\x14E\x14C\x3"+
		"\x2\x2\x2\x14E\x14F\x3\x2\x2\x2\x14F\x150\x3\x2\x2\x2\x150\x151\a\\\x2"+
		"\x2\x151^\x3\x2\x2\x2\x152\x153\x5[.\x2\x153\x154\aV\x2\x2\x154\x155\x5"+
		"]/\x2\x155`\x3\x2\x2\x2\x156\x157\x5[.\x2\x157\x62\x3\x2\x2\x2\x158\x159"+
		"\a?\x2\x2\x159\x15D\a?\x2\x2\x15A\x15B\a>\x2\x2\x15B\x15D\a@\x2\x2\x15C"+
		"\x158\x3\x2\x2\x2\x15C\x15A\x3\x2\x2\x2\x15D\x64\x3\x2\x2\x2\x15E\x15F"+
		"\a?\x2\x2\x15F\x66\x3\x2\x2\x2\x160\x161\a@\x2\x2\x161h\x3\x2\x2\x2\x162"+
		"\x163\a@\x2\x2\x163\x164\a?\x2\x2\x164j\x3\x2\x2\x2\x165\x166\a>\x2\x2"+
		"\x166l\x3\x2\x2\x2\x167\x168\a>\x2\x2\x168\x169\a?\x2\x2\x169n\x3\x2\x2"+
		"\x2\x16A\x16F\a#\x2\x2\x16B\x16C\ap\x2\x2\x16C\x16D\aq\x2\x2\x16D\x16F"+
		"\av\x2\x2\x16E\x16A\x3\x2\x2\x2\x16E\x16B\x3\x2\x2\x2\x16Fp\x3\x2\x2\x2"+
		"\x170\x171\a/\x2\x2\x171r\x3\x2\x2\x2\x172\x173\a-\x2\x2\x173t\x3\x2\x2"+
		"\x2\x174\x178\x5\x31\x19\x2\x175\x177\x5\x33\x1A\x2\x176\x175\x3\x2\x2"+
		"\x2\x177\x17A\x3\x2\x2\x2\x178\x176\x3\x2\x2\x2\x178\x179\x3\x2\x2\x2"+
		"\x179v\x3\x2\x2\x2\x17A\x178\x3\x2\x2\x2\x17B\x17C\a,\x2\x2\x17Cx\x3\x2"+
		"\x2\x2\x17D\x17E\a\x31\x2\x2\x17Ez\x3\x2\x2\x2\x17F\x180\a\'\x2\x2\x180"+
		"|\x3\x2\x2\x2\f\x2\x98\x9A\xA6\xA8\xD3\x14E\x15C\x16E\x178\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Transact.Query
