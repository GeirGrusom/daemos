//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Repos\ParserGen\ParserGen\TransactQuery.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Transact.Query {

	using System.Linq.Expressions;
	using static System.Linq.Expressions.Expression;
	using System.Reflection;

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class TransactQueryLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, WS=20, QUOTED_STRING=21, SINGLE_QUOTED_STRING=22, 
		GUID_SLASH=23, GUID=24, INT=25, ID=26, NULL=27, TRUE=28, FALSE=29, AND=30, 
		OR=31, XOR=32, DATE=33, TIME=34, DATETIME=35;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "WS", "ESCAPED_QUOTE", "QUOTED_STRING_BODY", "QUOTED_STRING", 
		"ESCAPED_SINGLE_QUOTE", "SINGLE_QUOTED_STRING_BODY", "SINGLE_QUOTED_STRING", 
		"HEX_DIGIT", "HEX_DIGIT_2", "HEX_DIGIT_4", "HEX_DIGIT_8", "GUID_SLASH", 
		"GUID", "INT", "ID_HEAD", "ID_TAIL", "ID", "NULL", "TRUE", "FALSE", "AND", 
		"OR", "XOR", "FLOAT_INT", "YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", 
		"MILLISECOND", "DATE", "TIME", "DATETIME"
	};


		public ParameterExpression Transaction { get; } = Parameter(typeof(Transaction));
	    public static MemberExpression GetPropertyCI(Expression owner, string name)
	    {
	        return Property(owner, owner.Type.GetProperty(name, System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.GetProperty | System.Reflection.BindingFlags.IgnoreCase | System.Reflection.BindingFlags.Public));
	    }


	public TransactQueryLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'+'", "'-'", "'='", "'!='", "'<>'", "'>'", "'<'", "'>='", "'<='", 
		"'*'", "'/'", "'%'", "'not'", "'!'", "'('", "')'", "'.'", "'@'", "'e'", 
		"' '", null, null, null, null, null, null, "'null'", "'true'", "'false'", 
		"'and'", "'or'", "'xor'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "WS", "QUOTED_STRING", 
		"SINGLE_QUOTED_STRING", "GUID_SLASH", "GUID", "INT", "ID", "NULL", "TRUE", 
		"FALSE", "AND", "OR", "XOR", "DATE", "TIME", "DATETIME"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "TransactQuery.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2%\x137\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x3\x2\x3\x2"+
		"\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\a\x3\a"+
		"\x3\b\x3\b\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r"+
		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12"+
		"\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16"+
		"\x3\x16\x3\x16\x3\x17\x3\x17\a\x17\xA3\n\x17\f\x17\xE\x17\xA6\v\x17\x3"+
		"\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\a\x1A\xB1"+
		"\n\x1A\f\x1A\xE\x1A\xB4\v\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3 \x3"+
		" \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3!\x3!\x3!\x3!\x3!\x3!"+
		"\x3!\x3!\x3!\x3\"\x6\"\xDC\n\"\r\"\xE\"\xDD\x3#\x3#\x3$\x3$\x3%\x3%\a"+
		"%\xE6\n%\f%\xE%\xE9\v%\x3&\x3&\x3&\x3&\x3&\x3\'\x3\'\x3\'\x3\'\x3\'\x3"+
		"(\x3(\x3(\x3(\x3(\x3(\x3)\x3)\x3)\x3)\x3*\x3*\x3*\x3+\x3+\x3+\x3+\x3,"+
		"\x6,\x107\n,\r,\xE,\x108\x3-\x3-\x3-\x3-\x3-\x3.\x3.\x3.\x3/\x3/\x3/\x3"+
		"\x30\x3\x30\x3\x30\x3\x31\x3\x31\x3\x31\x3\x32\x3\x32\x3\x32\x3\x33\x3"+
		"\x33\x3\x33\x3\x33\x3\x34\x3\x34\x3\x34\x3\x34\x3\x34\x3\x34\x3\x35\x3"+
		"\x35\x3\x35\x3\x35\x3\x35\x3\x35\x3\x35\x5\x35\x130\n\x35\x3\x35\x3\x35"+
		"\x3\x36\x3\x36\x3\x36\x3\x36\x4\xA4\xB2\x2\x2\x37\x3\x2\x3\x5\x2\x4\a"+
		"\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2"+
		"\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'"+
		"\x2\x15)\x2\x16+\x2\x2-\x2\x2/\x2\x17\x31\x2\x2\x33\x2\x2\x35\x2\x18\x37"+
		"\x2\x2\x39\x2\x2;\x2\x2=\x2\x2?\x2\x19\x41\x2\x1A\x43\x2\x1B\x45\x2\x2"+
		"G\x2\x2I\x2\x1CK\x2\x1DM\x2\x1EO\x2\x1FQ\x2 S\x2!U\x2\"W\x2\x2Y\x2\x2"+
		"[\x2\x2]\x2\x2_\x2\x2\x61\x2\x2\x63\x2\x2\x65\x2\x2g\x2#i\x2$k\x2%\x3"+
		"\x2\v\x4\x2\f\f\xF\xF\x5\x2\x32;\x43H\x63h\x3\x2\x32;\x5\x2\x43\\\x61"+
		"\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x3\x2\x32\x33\x3\x2\x32\x35\x3"+
		"\x2\x32\x34\x3\x2\x32\x37\x12C\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2I\x3\x2\x2\x2"+
		"\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3"+
		"\x2\x2\x2\x2U\x3\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2"+
		"\x2\x3m\x3\x2\x2\x2\x5o\x3\x2\x2\x2\aq\x3\x2\x2\x2\ts\x3\x2\x2\x2\vv\x3"+
		"\x2\x2\x2\ry\x3\x2\x2\x2\xF{\x3\x2\x2\x2\x11}\x3\x2\x2\x2\x13\x80\x3\x2"+
		"\x2\x2\x15\x83\x3\x2\x2\x2\x17\x85\x3\x2\x2\x2\x19\x87\x3\x2\x2\x2\x1B"+
		"\x89\x3\x2\x2\x2\x1D\x8D\x3\x2\x2\x2\x1F\x8F\x3\x2\x2\x2!\x91\x3\x2\x2"+
		"\x2#\x93\x3\x2\x2\x2%\x95\x3\x2\x2\x2\'\x97\x3\x2\x2\x2)\x99\x3\x2\x2"+
		"\x2+\x9D\x3\x2\x2\x2-\xA4\x3\x2\x2\x2/\xA7\x3\x2\x2\x2\x31\xAB\x3\x2\x2"+
		"\x2\x33\xB2\x3\x2\x2\x2\x35\xB5\x3\x2\x2\x2\x37\xB9\x3\x2\x2\x2\x39\xBB"+
		"\x3\x2\x2\x2;\xBE\x3\x2\x2\x2=\xC1\x3\x2\x2\x2?\xC4\x3\x2\x2\x2\x41\xD1"+
		"\x3\x2\x2\x2\x43\xDB\x3\x2\x2\x2\x45\xDF\x3\x2\x2\x2G\xE1\x3\x2\x2\x2"+
		"I\xE3\x3\x2\x2\x2K\xEA\x3\x2\x2\x2M\xEF\x3\x2\x2\x2O\xF4\x3\x2\x2\x2Q"+
		"\xFA\x3\x2\x2\x2S\xFE\x3\x2\x2\x2U\x101\x3\x2\x2\x2W\x106\x3\x2\x2\x2"+
		"Y\x10A\x3\x2\x2\x2[\x10F\x3\x2\x2\x2]\x112\x3\x2\x2\x2_\x115\x3\x2\x2"+
		"\x2\x61\x118\x3\x2\x2\x2\x63\x11B\x3\x2\x2\x2\x65\x11E\x3\x2\x2\x2g\x122"+
		"\x3\x2\x2\x2i\x128\x3\x2\x2\x2k\x133\x3\x2\x2\x2mn\a-\x2\x2n\x4\x3\x2"+
		"\x2\x2op\a/\x2\x2p\x6\x3\x2\x2\x2qr\a?\x2\x2r\b\x3\x2\x2\x2st\a#\x2\x2"+
		"tu\a?\x2\x2u\n\x3\x2\x2\x2vw\a>\x2\x2wx\a@\x2\x2x\f\x3\x2\x2\x2yz\a@\x2"+
		"\x2z\xE\x3\x2\x2\x2{|\a>\x2\x2|\x10\x3\x2\x2\x2}~\a@\x2\x2~\x7F\a?\x2"+
		"\x2\x7F\x12\x3\x2\x2\x2\x80\x81\a>\x2\x2\x81\x82\a?\x2\x2\x82\x14\x3\x2"+
		"\x2\x2\x83\x84\a,\x2\x2\x84\x16\x3\x2\x2\x2\x85\x86\a\x31\x2\x2\x86\x18"+
		"\x3\x2\x2\x2\x87\x88\a\'\x2\x2\x88\x1A\x3\x2\x2\x2\x89\x8A\ap\x2\x2\x8A"+
		"\x8B\aq\x2\x2\x8B\x8C\av\x2\x2\x8C\x1C\x3\x2\x2\x2\x8D\x8E\a#\x2\x2\x8E"+
		"\x1E\x3\x2\x2\x2\x8F\x90\a*\x2\x2\x90 \x3\x2\x2\x2\x91\x92\a+\x2\x2\x92"+
		"\"\x3\x2\x2\x2\x93\x94\a\x30\x2\x2\x94$\x3\x2\x2\x2\x95\x96\a\x42\x2\x2"+
		"\x96&\x3\x2\x2\x2\x97\x98\ag\x2\x2\x98(\x3\x2\x2\x2\x99\x9A\a\"\x2\x2"+
		"\x9A\x9B\x3\x2\x2\x2\x9B\x9C\b\x15\x2\x2\x9C*\x3\x2\x2\x2\x9D\x9E\a^\x2"+
		"\x2\x9E\x9F\a$\x2\x2\x9F,\x3\x2\x2\x2\xA0\xA3\x5+\x16\x2\xA1\xA3\n\x2"+
		"\x2\x2\xA2\xA0\x3\x2\x2\x2\xA2\xA1\x3\x2\x2\x2\xA3\xA6\x3\x2\x2\x2\xA4"+
		"\xA5\x3\x2\x2\x2\xA4\xA2\x3\x2\x2\x2\xA5.\x3\x2\x2\x2\xA6\xA4\x3\x2\x2"+
		"\x2\xA7\xA8\a$\x2\x2\xA8\xA9\x5-\x17\x2\xA9\xAA\a$\x2\x2\xAA\x30\x3\x2"+
		"\x2\x2\xAB\xAC\a^\x2\x2\xAC\xAD\a)\x2\x2\xAD\x32\x3\x2\x2\x2\xAE\xB1\x5"+
		"\x31\x19\x2\xAF\xB1\n\x2\x2\x2\xB0\xAE\x3\x2\x2\x2\xB0\xAF\x3\x2\x2\x2"+
		"\xB1\xB4\x3\x2\x2\x2\xB2\xB3\x3\x2\x2\x2\xB2\xB0\x3\x2\x2\x2\xB3\x34\x3"+
		"\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB5\xB6\a)\x2\x2\xB6\xB7\x5\x33\x1A\x2\xB7"+
		"\xB8\a)\x2\x2\xB8\x36\x3\x2\x2\x2\xB9\xBA\t\x3\x2\x2\xBA\x38\x3\x2\x2"+
		"\x2\xBB\xBC\x5\x37\x1C\x2\xBC\xBD\x5\x37\x1C\x2\xBD:\x3\x2\x2\x2\xBE\xBF"+
		"\x5\x39\x1D\x2\xBF\xC0\x5\x39\x1D\x2\xC0<\x3\x2\x2\x2\xC1\xC2\x5;\x1E"+
		"\x2\xC2\xC3\x5;\x1E\x2\xC3>\x3\x2\x2\x2\xC4\xC5\a}\x2\x2\xC5\xC6\x5=\x1F"+
		"\x2\xC6\xC7\a/\x2\x2\xC7\xC8\x5;\x1E\x2\xC8\xC9\a/\x2\x2\xC9\xCA\x5;\x1E"+
		"\x2\xCA\xCB\a/\x2\x2\xCB\xCC\x5;\x1E\x2\xCC\xCD\a/\x2\x2\xCD\xCE\x5=\x1F"+
		"\x2\xCE\xCF\x5;\x1E\x2\xCF\xD0\a\x7F\x2\x2\xD0@\x3\x2\x2\x2\xD1\xD2\a"+
		"}\x2\x2\xD2\xD3\x5=\x1F\x2\xD3\xD4\x5;\x1E\x2\xD4\xD5\x5;\x1E\x2\xD5\xD6"+
		"\x5;\x1E\x2\xD6\xD7\x5=\x1F\x2\xD7\xD8\x5;\x1E\x2\xD8\xD9\a\x7F\x2\x2"+
		"\xD9\x42\x3\x2\x2\x2\xDA\xDC\t\x4\x2\x2\xDB\xDA\x3\x2\x2\x2\xDC\xDD\x3"+
		"\x2\x2\x2\xDD\xDB\x3\x2\x2\x2\xDD\xDE\x3\x2\x2\x2\xDE\x44\x3\x2\x2\x2"+
		"\xDF\xE0\t\x5\x2\x2\xE0\x46\x3\x2\x2\x2\xE1\xE2\t\x6\x2\x2\xE2H\x3\x2"+
		"\x2\x2\xE3\xE7\x5\x45#\x2\xE4\xE6\x5G$\x2\xE5\xE4\x3\x2\x2\x2\xE6\xE9"+
		"\x3\x2\x2\x2\xE7\xE5\x3\x2\x2\x2\xE7\xE8\x3\x2\x2\x2\xE8J\x3\x2\x2\x2"+
		"\xE9\xE7\x3\x2\x2\x2\xEA\xEB\ap\x2\x2\xEB\xEC\aw\x2\x2\xEC\xED\an\x2\x2"+
		"\xED\xEE\an\x2\x2\xEEL\x3\x2\x2\x2\xEF\xF0\av\x2\x2\xF0\xF1\at\x2\x2\xF1"+
		"\xF2\aw\x2\x2\xF2\xF3\ag\x2\x2\xF3N\x3\x2\x2\x2\xF4\xF5\ah\x2\x2\xF5\xF6"+
		"\a\x63\x2\x2\xF6\xF7\an\x2\x2\xF7\xF8\au\x2\x2\xF8\xF9\ag\x2\x2\xF9P\x3"+
		"\x2\x2\x2\xFA\xFB\a\x63\x2\x2\xFB\xFC\ap\x2\x2\xFC\xFD\a\x66\x2\x2\xFD"+
		"R\x3\x2\x2\x2\xFE\xFF\aq\x2\x2\xFF\x100\at\x2\x2\x100T\x3\x2\x2\x2\x101"+
		"\x102\az\x2\x2\x102\x103\aq\x2\x2\x103\x104\at\x2\x2\x104V\x3\x2\x2\x2"+
		"\x105\x107\t\x4\x2\x2\x106\x105\x3\x2\x2\x2\x107\x108\x3\x2\x2\x2\x108"+
		"\x106\x3\x2\x2\x2\x108\x109\x3\x2\x2\x2\x109X\x3\x2\x2\x2\x10A\x10B\t"+
		"\x4\x2\x2\x10B\x10C\t\x4\x2\x2\x10C\x10D\t\x4\x2\x2\x10D\x10E\t\x4\x2"+
		"\x2\x10EZ\x3\x2\x2\x2\x10F\x110\t\a\x2\x2\x110\x111\t\x4\x2\x2\x111\\"+
		"\x3\x2\x2\x2\x112\x113\t\b\x2\x2\x113\x114\t\x4\x2\x2\x114^\x3\x2\x2\x2"+
		"\x115\x116\t\t\x2\x2\x116\x117\t\x4\x2\x2\x117`\x3\x2\x2\x2\x118\x119"+
		"\t\n\x2\x2\x119\x11A\t\x4\x2\x2\x11A\x62\x3\x2\x2\x2\x11B\x11C\t\n\x2"+
		"\x2\x11C\x11D\t\x4\x2\x2\x11D\x64\x3\x2\x2\x2\x11E\x11F\t\x4\x2\x2\x11F"+
		"\x120\t\x4\x2\x2\x120\x121\t\x4\x2\x2\x121\x66\x3\x2\x2\x2\x122\x123\x5"+
		"Y-\x2\x123\x124\a/\x2\x2\x124\x125\x5[.\x2\x125\x126\a/\x2\x2\x126\x127"+
		"\x5]/\x2\x127h\x3\x2\x2\x2\x128\x129\x5_\x30\x2\x129\x12A\a<\x2\x2\x12A"+
		"\x12B\x5\x61\x31\x2\x12B\x12C\a<\x2\x2\x12C\x12F\x5\x63\x32\x2\x12D\x12E"+
		"\a\x30\x2\x2\x12E\x130\x5\x65\x33\x2\x12F\x12D\x3\x2\x2\x2\x12F\x130\x3"+
		"\x2\x2\x2\x130\x131\x3\x2\x2\x2\x131\x132\a\\\x2\x2\x132j\x3\x2\x2\x2"+
		"\x133\x134\x5g\x34\x2\x134\x135\aV\x2\x2\x135\x136\x5i\x35\x2\x136l\x3"+
		"\x2\x2\x2\v\x2\xA2\xA4\xB0\xB2\xDD\xE7\x108\x12F\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Transact.Query
